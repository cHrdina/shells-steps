{"version":3,"sources":["contentfulProvider.js","pages/index.js","components/tile.js","pages/countries.js","components/anchorNav.js","pages/trips.js","components/customCarousel.js","components/dateFormatter.js","components/Tag.js","pages/trip.js","pages/country.js","pages/map.js","components/collapsibleMenu.js","components/navBar.js","App.js","serviceWorker.js","index.js"],"names":["client","require","createClient","space","accessToken","Index","state","data","getAsset","then","asset","setState","fields","file","url","className","style","backgroundImage","this","to","aria-label","React","Component","Tile","props","toObject","pathname","id","filteredOut","imgSrc","text","Countries","getEntries","content_type","order","response","items","map","country","key","sys","countryName","tilePicCountry","undefined","AnchorNav","handleClick","bind","e","onDateSelect","target","trip","date","tripDate","split","array","propName","arrayOut","i","length","push","anchorData","getAnchorData","selectedYear","removeDuplicates","listItem","onClick","smooth","Trips","handleDateSelect","filterActive","year","tripName","tilePicTrip","library","add","faCoffee","faChevronLeft","faChevronRight","CustomCarousel","onChange","value","handleKeyPress","console","log","class","tabIndex","onKeyDown","centered","infinite","arrowLeft","icon","arrowRight","addArrowClickHandler","keepDirectionWhenDragging","image","src","alt","title","getDate","input","monthLength","inputArray","Date","toString","toLocaleString","month","getFullYear","Tag","Trip","useState","isLoading","setIsLoading","tripDetails","setTripDetails","useEffect","handleDataFetch","a","pageId","location","getEntry","faCalendarAlt","faMapMarkerAlt","tripLocations","countriesVisitedInTrip","tripPhotos","highlights","tripItinirary","replace","Country","countryDetails","setCountryDetails","tripsInCountry","tripsInThisCountry","tripTiles","info","countryHighlights","countryTips","countryLocations","Map","CollapsibleMenu","navLinks","menuOpened","setMenuOpened","link","exact","activeClassName","NavBar","App","handleFirstTab","keyCode","document","body","classList","window","removeEventListener","menuActive","addEventListener","basename","path","component","Boolean","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3f0a2d10.chunk.js","sourcesContent":["\nvar contentful = require('contentful');\n\nvar client = contentful.createClient({\n  space: 'r1wogzr4p3xm',\n  accessToken: '503f757960e1eb1b131f90222821301097a03523d3bcbc470b4ff842fb9cf17d'\n});\n\nexport default client;\n","import React from \"react\";\nimport client from \"../contentfulProvider\";\nimport { Link } from \"react-router-dom\";\n\nclass Index extends React.Component {\n  state = { data: \"\" };\n\n  componentDidMount() {\n    client.getAsset(\"71TyxViSSevOn2SFzybHtE\").then((asset) =>\n      this.setState({\n        data: `${asset.fields.file.url}?fm=jpg&fl=progressive`,\n      })\n    );\n\n    // Tasmania BG\n    // client.getAsset(\"5cSBFkBEFUWmwsUsEWqg4K\").then((asset) =>\n    //   this.setState({\n    //     data: `${asset.fields.file.url}?fm=jpg&fl=progressive&q=50`,\n    //   })\n    // );\n  }\n\n  render() {\n    return (\n      <>\n        <div\n          className=\"hero-image-main\"\n          style={{ backgroundImage: `url(${this.state.data})` }}\n        >\n          <div className=\"title-area\">\n            <h1>Shell's Steps</h1>\n            <p>My travel tales from around the world.</p>\n            <Link to=\"/trips/\">\n              <button aria-label=\"View my trips\" className=\"title-cta\">\n                View my trips\n              </button>\n            </Link>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default Index;\n","import React from 'react';\nimport { Link } from \"react-router-dom\";\n\nfunction Tile(props) {\n\n  const toObject = {\n    pathname: props.to,\n    data: props.data\n  };\n\n  return (\n    <div>\n      <Link className=\"below-fixed-header\" id={props.id} to={toObject}>\n        <div className={`tile ${props.filteredOut && \"filtered\"}`} style={{backgroundImage:`url(${props.imgSrc}?fm=jpg&w=600&fl=progressive)`}}>\n          <div className='tile-text'>\n            <h2>{props.text}</h2>\n          </div>\n        </div>\n      </Link>\n    </div>\n  )\n}\n\nexport default Tile;\n","import React from \"react\";\nimport Tile from \"../components/tile\";\nimport client from \"../contentfulProvider\";\n\nclass Countries extends React.Component {\n  state = { data: [] };\n\n  componentDidMount() {\n    client\n      .getEntries({ content_type: \"country\", order: \"fields.countryName\" })\n      .then((response) => this.setState({ data: response.items }));\n  }\n\n  render() {\n    return (\n      <div className=\"content-container\">\n        <div className=\"page-header\">\n          <h1>Countries</h1>\n        </div>\n        <div className=\"tiles\">\n          {this.state.data &&\n            this.state.data.map((country) => (\n              <Tile\n                key={country.sys.id}\n                id={country.sys.id}\n                to={`/countries/${country.sys.id}`}\n                text={country.fields.countryName}\n                imgSrc={\n                  country.fields.tilePicCountry &&\n                  country.fields.tilePicCountry.fields != null\n                    ? country.fields.tilePicCountry.fields.file.url\n                    : undefined\n                }\n                data={country}\n              />\n            ))}\n        </div>\n      </div>\n    );\n  }\n}\nexport default Countries;\n","import React from \"react\";\nimport { HashLink as Link } from \"react-router-hash-link\";\n\nclass AnchorNav extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick(e) {\n    this.props.onDateSelect(e.target.text);\n  }\n\n  getAnchorData() {\n    return this.props.data.map((trip) => ({\n      id: trip.sys.id,\n      date: trip.fields.tripDate.split(\"-\")[0],\n    }));\n  }\n\n  removeDuplicates(array, propName) {\n    var arrayOut = [];\n    var i = 0;\n\n    while (i < array.length - 1) {\n      arrayOut.push(array[i]);\n      if (i + 1 < array.length - 1) {\n        while (array[i][propName] === array[i + 1][propName]) {\n          i++;\n        }\n      }\n      i++;\n    }\n    return arrayOut;\n  }\n\n  render() {\n    const anchorData = this.getAnchorData();\n    const selectedYear = this.props.selectedYear;\n\n    return (\n      <div id=\"side-nav-left\">\n        <ul className=\"no-style\">\n          {this.props.data &&\n            this.removeDuplicates(anchorData, \"date\").map((listItem) => (\n              <li key={listItem.id}>\n                <Link\n                  key={listItem.id}\n                  to={`#${listItem.id}`}\n                  onClick={this.handleClick}\n                  className={\n                    selectedYear === listItem.date ? \"active\" : \"inactive\"\n                  }\n                  smooth\n                >\n                  {listItem.date}\n                </Link>\n              </li>\n            ))}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default AnchorNav;\n","import React from \"react\";\nimport Tile from \"../components/tile\";\nimport client from \"../contentfulProvider\";\nimport AnchorNav from \"../components/anchorNav\";\nimport { HashLink as Link } from \"react-router-hash-link\";\n\nclass Trips extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleDateSelect = this.handleDateSelect.bind(this);\n    this.state = {\n      data: [],\n      selectedYear: \"\",\n      filterActive: false,\n    };\n  }\n\n  componentDidMount() {\n    client\n      .getEntries({ content_type: \"Trip\", order: \"-fields.tripDate\" })\n      .then((response) => this.setState({ data: response.items }));\n  }\n\n  handleDateSelect(year) {\n    if (year === this.state.selectedYear) {\n      this.setState({ selectedYear: \"\" });\n      this.setState({ filterActive: false });\n    } else {\n      this.setState({ selectedYear: year });\n      this.setState({ filterActive: true });\n    }\n  }\n\n  render() {\n    const selectedYear = this.state.selectedYear;\n    const filterActive = this.state.filterActive;\n\n    return (\n      <>\n        {this.state.data && (\n          <AnchorNav\n            data={this.state.data}\n            selectedYear={selectedYear}\n            onDateSelect={this.handleDateSelect}\n          />\n        )}\n\n        <div className=\"content-container\">\n          <div className=\"page-header\">\n            <h1>Trips</h1>\n          </div>\n          <div className=\"tiles\">\n            {this.state.data &&\n              this.state.data.map((trip) => (\n                <Tile\n                  key={trip.sys.id}\n                  id={trip.sys.id}\n                  to={`/trips/${trip.sys.id}`}\n                  text={trip.fields.tripName}\n                  imgSrc={\n                    trip.fields.tilePicTrip &&\n                    trip.fields.tilePicTrip.fields !== null\n                      ? trip.fields.tilePicTrip.fields.file.url\n                      : undefined\n                  }\n                  filteredOut={\n                    filterActive &&\n                    selectedYear !== trip.fields.tripDate.split(\"-\")[0]\n                  }\n                />\n              ))}\n          </div>\n        </div>\n\n        {/* <div id=\"footer\">\n          <Link smooth to=\"#top\">\n            Back to top\n          </Link>\n        </div> */}\n      </>\n    );\n  }\n}\nexport default Trips;\n","import React from \"react\";\nimport Carousel from \"@brainhubeu/react-carousel\";\nimport \"@brainhubeu/react-carousel/lib/style.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport {\n  faCoffee,\n  faChevronLeft,\n  faChevronRight,\n} from \"@fortawesome/free-solid-svg-icons\";\n\nlibrary.add(faCoffee, faChevronLeft, faChevronRight);\n// ...\n\nclass CustomCarousel extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: 0,\n    };\n  }\n\n  onChange = (value) => this.setState({ value });\n\n  handleKeyPress = (e) => {\n    console.log(\"key pressed: \" + e.key);\n    if (e.key === \"ArrowRight\") {\n      this.setState({ value: this.state.value + 1 });\n    } else if (e.key === \"ArrowLeft\")\n      this.setState({ value: this.state.value - 1 });\n  };\n\n  render() {\n    return (\n      <div\n        class=\"carousel\"\n        tabIndex=\"0\"\n        onKeyDown={(e) => this.handleKeyPress(e)}\n      >\n        <Carousel\n          value={this.state.value}\n          onChange={this.onChange}\n          centered\n          infinite\n          arrowLeft={\n            <FontAwesomeIcon className=\"carousel-arrow\" icon=\"chevron-left\" />\n          }\n          arrowRight={\n            <FontAwesomeIcon className=\"carousel-arrow\" icon=\"chevron-right\" />\n          }\n          addArrowClickHandler\n          keepDirectionWhenDragging\n        >\n          {this.props.items &&\n            this.props.items.map((image, key) => (\n              <img\n                src={`${image.fields.file.url}?fm=jpg&fl=progressive&q=30`}\n                key={key}\n                alt={image.fields.title}\n              />\n            ))}\n        </Carousel>\n      </div>\n    );\n  }\n}\n\nexport default CustomCarousel;\n","function getDate (input, monthLength) { // input will be 2020-02-28 format\n  const inputArray = input.split(\"-\");\n  const date = new Date(inputArray[0], inputArray[1]-1, inputArray[2]);\n\n  const day = date.getDate().toString();\n  const month = date.toLocaleString('default', { month: monthLength });\n  const year = date.getFullYear().toString();\n\n  const dateOut = day + \" \" + month + \" \" + year\n\n  return dateOut;\n}\n\nexport default getDate;\n","import React from \"react\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nfunction Tag({ icon, text }) {\n  return (\n    <div className=\"tag\">\n      <FontAwesomeIcon icon={icon} className=\"icon\" />\n      <div className=\"tag-text\">{text}</div>\n    </div>\n  );\n}\n\nexport default Tag;\n","import React, { useEffect, useState } from \"react\";\nimport { HashLink as Link } from \"react-router-hash-link\";\nimport client from \"../contentfulProvider\";\nimport ReactMarkdown from \"react-markdown\";\nimport CustomCarousel from \"../components/customCarousel\";\nimport {\n  faPlayCircle,\n  faMapMarkerAlt,\n  faCalendarAlt,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport getDate from \"../components/dateFormatter\";\nimport Tag from \"../components/Tag\";\n\nfunction Trip(props) {\n  // this is just a way of getting state inside functions which... don't have state (does not work on classes)\n  const [isLoading, setIsLoading] = useState(true);\n  const [tripDetails, setTripDetails] = useState({});\n\n  // Think of this as kind of a component did mount...\n  useEffect(() => {\n    const handleDataFetch = async () => {\n      const pageId = props.location.pathname.split(\"/\")[2];\n      // await pattern is the same as using then(), just makes it more streamline\n      const response = await client.getEntry(pageId); // wait for this to resolve, returns response.\n      setTripDetails(response);\n      setIsLoading(false);\n    };\n\n    if (props.location.data) {\n      setTripDetails(props.location.data);\n      setIsLoading(false);\n    } else {\n      handleDataFetch();\n    }\n  }, [props.location]);\n\n  // Haven't got the data yet, so hang tight\n  if (isLoading) {\n    return <></>;\n  }\n\n  return (\n    <>\n      <div className=\"trip-hero\">\n        <div className=\"hero-text-area\">\n          <div className=\"hero-title\">\n            <h1>{tripDetails.fields.tripName}</h1>\n          </div>\n          <hr className=\"style-1\" />\n          <div className=\"hero-tags\">\n            <Tag\n              icon={faCalendarAlt}\n              text={getDate(tripDetails.fields.tripDate, \"long\")}\n            />\n            <Tag\n              icon={faMapMarkerAlt}\n              text={tripDetails.fields.tripLocations}\n            />\n          </div>\n          <ul className=\"no-style-light-blue\">\n            {tripDetails.fields.countriesVisitedInTrip.map((country, key) => (\n              <li className=\"hero-inline-list_item\" key={key}>\n                <Link\n                  to={`/countries/${country.sys.id}`}\n                  className=\"country-link\"\n                >\n                  {country.fields.countryName}\n                </Link>\n              </li>\n            ))}\n          </ul>\n        </div>\n\n        {tripDetails.fields.tilePicTrip && (\n          <div\n            className=\"hero-image\"\n            style={{\n              backgroundImage: `url(${tripDetails.fields.tilePicTrip.fields.file.url}?fm=jpg&fl=progressive)`,\n            }}\n          ></div>\n        )}\n      </div>\n\n      <div className=\"content-container\">\n        <CustomCarousel items={tripDetails.fields.tripPhotos} />\n\n        <div className=\"content-section\">\n          <ReactMarkdown>{tripDetails.fields.highlights}</ReactMarkdown>\n          <ReactMarkdown>{tripDetails.fields.tripItinirary}</ReactMarkdown>\n        </div>\n\n        <div className=\"content-section\">\n          <div className=\"blog\">\n            <ReactMarkdown>\n              {tripDetails.fields.tripDetails.replace(\n                /.JPG/gi,\n                \".JPG?fl=progressive\"\n              )}\n            </ReactMarkdown>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default Trip;\n","import React, { useEffect, useState } from \"react\";\nimport { HashLink as Link } from \"react-router-hash-link\";\nimport client from \"../contentfulProvider\";\nimport ReactMarkdown from \"react-markdown\";\nimport Tile from \"../components/tile\";\n\nfunction Country(props) {\n  // this is just a way of getting state inside functions which... don't have state (does not work on classes)\n  const [isLoading, setIsLoading] = useState(true);\n  const [countryDetails, setCountryDetails] = useState({});\n\n  console.log(\"Country Props: \");\n  console.log(props.location);\n\n  // Think of this as kind of a component did mount...\n  useEffect(() => {\n    const handleDataFetch = async () => {\n      const pageId = props.location.pathname.split(\"/\")[2];\n      // await pattern is the same as using then(), just makes it more streamline\n      const response = await client.getEntry(pageId); // wait for this to resolve, returns response.\n      setCountryDetails(response);\n      setIsLoading(false);\n    };\n\n    if (props.location.data) {\n      setCountryDetails(props.location.data);\n      setIsLoading(false);\n    } else {\n      handleDataFetch();\n    }\n  }, [props.location]);\n\n  // Haven't got the data yet, so hang tight\n  if (isLoading) {\n    return <></>;\n  }\n\n  // Get all trips in this country\n  const tripsInCountry = countryDetails.fields.tripsInThisCountry;\n\n  // Generate trip tiles and store in variable\n  const tripTiles = tripsInCountry.length ? (\n    tripsInCountry.map(\n      (trip) =>\n        console.info(\"trip\", trip) || (\n          <Tile\n            key={trip.sys.id}\n            to={`/trips/${trip.sys.id}`}\n            text={trip.fields.tripName}\n            imgSrc={\n              trip.fields.tilePicTrip && trip.fields.tilePicTrip.fields != null\n                ? trip.fields.tilePicTrip.fields.file.url\n                : undefined\n            }\n            data={trip}\n          />\n        )\n    )\n  ) : (\n    <></>\n  );\n\n  return (\n    <>\n      {countryDetails.fields.tilePicCountry && (\n        <div\n          className=\"country-hero\"\n          style={{\n            backgroundImage: `url(${countryDetails.fields.tilePicCountry.fields.file.url}?fm=jpg&fl=progressive)`,\n          }}\n        >\n          <div className=\"country-hero-text\">\n            {countryDetails.fields.countryName}\n          </div>\n        </div>\n      )}\n\n      <div className=\"content-container\">\n        <div className=\"content-section\">\n          <ReactMarkdown>\n            {countryDetails.fields.countryHighlights}\n          </ReactMarkdown>\n        </div>\n        <div className=\"content-section\">\n          <ReactMarkdown>{countryDetails.fields.countryTips}</ReactMarkdown>\n        </div>\n        <div className=\"content-section\">\n          <ReactMarkdown>\n            {countryDetails.fields.countryLocations}\n          </ReactMarkdown>\n        </div>\n\n        <div className=\"content-section\">\n          <h2> Trips in {countryDetails.fields.countryName} </h2>\n          <div className=\"tiles\">{tripTiles}</div>\n        </div>\n      </div>\n      {/* <div id=\"footer\">\n        <Link to=\"/countries\">Back to Countries</Link>\n      </div> */}\n    </>\n  );\n}\n\nexport default Country;\n","import React from 'react';\n\nfunction Map() {\n  return (\n    <>\n      <div className=\"map\">\n        <iframe\n          src=\"https://www.google.com.au/maps/d/embed?mid=14Xxl8D0RNCmZcCREEImvSxx7QpE\">\n        </iframe>\n      </div>\n    </>\n  );\n}\n\nexport default Map;\n","import React, { useState } from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nfunction CollapsibleMenu({ navLinks }) {\n  const [menuOpened, setMenuOpened] = useState(false);\n  console.log(navLinks);\n\n  return (\n    <div className=\"collapsible-menu-container\">\n      <div\n        className={`hamburger ${menuOpened ? \"open\" : null}`}\n        onClick={() => setMenuOpened(!menuOpened)}\n      >\n        <span></span>\n        <span></span>\n        <span></span>\n        <span></span>\n      </div>\n\n      <div\n        className={`collapsible-menu ${\n          menuOpened ? \"collapsible-menu-active\" : null\n        }`}\n      >\n        <ul>\n          {navLinks.map((link, key) => (\n            <NavLink\n              key={key}\n              to={\"/\" + (link === \"Home\" ? \"\" : link)}\n              exact={true}\n              activeClassName=\"nav-active-collapsible\"\n              onClick={() => setMenuOpened(false)}\n            >\n              <li>{link}</li>\n            </NavLink>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n}\n\nexport default CollapsibleMenu;\n","import React, { useState } from \"react\";\nimport \"../App.css\";\nimport { Link, NavLink } from \"react-router-dom\";\nimport CollapsibleMenu from \"./collapsibleMenu\";\n\nfunction NavBar({ navLinks }) {\n  const [navActive, setNavActive] = useState(false);\n\n  console.log(navLinks);\n\n  return (\n    <div className=\"navbar\">\n      <Link\n        id=\"logo\"\n        to=\"/\"\n        aria-label=\"Logo linking to Shell's Steps homepage\"\n      ></Link>\n\n      <div className=\"menu\">\n        <ul>\n          {navLinks.map((link, key) => (\n            <NavLink\n              to={\"/\" + (link === \"Home\" ? \"\" : link)}\n              exact={true}\n              activeClassName=\"nav-active\"\n            >\n              <li> {link} </li>\n            </NavLink>\n          ))}\n        </ul>\n      </div>\n\n      <CollapsibleMenu navLinks={navLinks} />\n    </div>\n  );\n}\n\nexport default NavBar;\n","import React from \"react\";\nimport \"./App.css\";\nimport {\n  HashRouter as Router,\n  Route,\n  Switch,\n  Link,\n  NavLink,\n} from \"react-router-dom\";\nimport Index from \"./pages/index\";\nimport Countries from \"./pages/countries.js\";\nimport Trips from \"./pages/trips\";\nimport Trip from \"./pages/trip\";\nimport Country from \"./pages/country\";\nimport Map from \"./pages/map\";\nimport NavBar from \"./components/navBar\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      menuActive: false,\n    };\n  }\n\n  handleFirstTab = (e) => {\n    if (e.keyCode === 9) {\n      // the \"I am a keyboard user\" key\n      document.body.classList.add(\"user-is-tabbing\");\n      console.log(\"User is tabbing\");\n      window.removeEventListener(\"keydown\", this.handleFirstTab);\n    }\n  };\n\n  render() {\n    window.addEventListener(\"keydown\", this.handleFirstTab);\n\n    console.log(window.location);\n    return (\n      <>\n        <Router basename=\"/\">\n          <div id=\"top\"></div>\n\n          <NavBar navLinks={[\"Home\", \"Trips\", \"Countries\", \"Map\"]} />\n\n          <div className=\"container-main\">\n            <Switch>\n              <Route path=\"/\" exact component={Index} />\n              <Route path=\"/trips/\" exact component={Trips} />\n              <Route path=\"/trips/:id\" component={Trip} />\n              <Route path=\"/countries/\" exact component={Countries} />\n              <Route path=\"/countries/:id\" component={Country} />\n              <Route path=\"/map\" component={Map} />\n            </Switch>\n          </div>\n        </Router>\n      </>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}