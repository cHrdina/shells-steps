{"version":3,"sources":["contentfulProvider.js","pages/index.js","components/tile.js","pages/countries.js","components/anchorNav.js","pages/trips.js","components/carousel.js","dateFormatter.js","pages/trip.js","pages/country.js","pages/map.js","App.js","serviceWorker.js","index.js"],"names":["client","require","createClient","space","accessToken","Index","state","data","getAsset","then","asset","setState","fields","file","url","className","style","backgroundImage","this","to","React","Component","Tile","props","toObject","pathname","class","id","filteredOut","imgSrc","text","Countries","getEntries","content_type","order","response","items","length","map","country","console","info","key","sys","countryName","tilePicCountry","undefined","AnchorNav","array","propName","log","arrayOut","i","push","removeDuplicates","listItem","window","location","href","indexOf","smooth","date","Trips","yearSelected","trip","tripDate","split","getAnchorData","tripName","tilePicTrip","library","add","faCoffee","faChevronLeft","faChevronRight","CustomCarousel","onChange","value","centered","arrowLeft","icon","size","arrowRight","addArrowClickHandler","image","src","getDate","input","monthLength","inputArray","Date","toString","toLocaleString","month","getFullYear","Trip","useState","isLoading","setIsLoading","tripDetails","setTripDetails","useEffect","handleDataFetch","a","pageId","getEntry","faCalendarAlt","faMapMarkerAlt","tripLocations","countriesVisitedInTrip","faPlayCircle","highlights","tripItinirary","tripPhotos","replace","Country","countryDetails","setCountryDetails","tripsInCountry","tripsInThisCountry","tripTiles","countryHighlights","countryTips","countryLocations","Map","faGlobeAmericas","App","basename","exact","activeClassName","path","component","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.84e3bb04.chunk.js","sourcesContent":["\nvar contentful = require('contentful');\n\nvar client = contentful.createClient({\n  space: 'r1wogzr4p3xm',\n  accessToken: '503f757960e1eb1b131f90222821301097a03523d3bcbc470b4ff842fb9cf17d'\n});\n\nexport default client;\n","import React from 'react';\nimport client from '../contentfulProvider';\nimport { Link } from \"react-router-dom\";\n\nclass Index extends React.Component {\n\n  state = { data: \"\" };\n\n  componentDidMount() {\n    client.getAsset('5cSBFkBEFUWmwsUsEWqg4K').then((asset) =>\n      this.setState({data: `${asset.fields.file.url}?fm=jpg&fl=progressive&q=50`})\n    )\n  }\n\n  render () {\n\n    return (\n      <>\n        <div className=\"hero-image-main\" style={{backgroundImage: `url(${this.state.data})`}}>\n          <div className=\"title-area\">\n            <h1>Where's Shell?</h1>\n            <p>My travel tales from around the world.</p>\n            <Link to=\"/trips/\"><button className=\"title-cta\">View my trips</button></Link>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default Index;\n","import React from 'react';\nimport { Link } from \"react-router-dom\";\n\nfunction Tile(props) {\n\n  const toObject = {\n    pathname: props.to,\n    data: props.data\n  };\n\n  return (\n    <div>\n      <Link class=\"below-fixed-header\" id={props.id} to={toObject}>\n        <div className={`tile ${props.filteredOut && \"filtered\"}`} style={{backgroundImage:`url(${props.imgSrc}?fm=jpg&w=600&fl=progressive)`}}>\n          <div className='tile-text'>\n            <h2>{props.text}</h2>\n          </div>\n        </div>\n      </Link>\n    </div>\n  )\n}\n\nexport default Tile;\n","import React from 'react';\nimport Tile from '../components/tile';\nimport client from '../contentfulProvider';\n\nclass Countries extends React.Component {\n  state = { data: [] };\n\n  componentDidMount() {\n    client.getEntries({content_type: 'country', order: 'fields.countryName'}).then(response =>\n      this.setState({data: response.items})\n    )\n  }\n\n  render() {\n\n    return (\n      <div className=\"content-container\">\n        <div className=\"page-header\">\n          <h1>Countries</h1>\n        </div>\n        <div className='tiles'>\n          {this.state.data.length ? this.state.data.map(\n            (country) => console.info('country', country) ||\n              <Tile\n                key={country.sys.id}\n                id={country.sys.id}\n                to={`/countries/${country.sys.id}`}\n                text={country.fields.countryName}\n                imgSrc={(country.fields.tilePicCountry && country.fields.tilePicCountry.fields != null) ? country.fields.tilePicCountry.fields.file.url : undefined}\n                data={country}\n              />\n          ) :\n            <>Loading...</>}\n        </div>\n      </div>\n    );\n  }\n\n}\nexport default Countries;\n","import React from 'react';\nimport { HashLink as Link } from \"react-router-hash-link\";\n\nfunction AnchorNav(props) {\n\n  // <ul>\n  //   {dates.map((year) =>\n  //     <li> <a href={`#${id}`}> {year} </a> </li>\n  //   )}\n  // </ul>\n\n\n  function removeDuplicates(array, propName) {\n    console.log(\"Removing duplicates for array: \");\n    console.log(array);\n    var arrayOut = [];\n    var i = 0;\n\n    while (i < array.length-1) {\n      arrayOut.push(array[i]);\n      if (i+1 < array.length-1) {\n        while (array[i][propName] == array[i+1][propName]) {\n          i++;\n        }\n      }\n      i++;\n    }\n    console.log(\"New array: \");\n    console.log(arrayOut);\n    return arrayOut;\n  }\n\n  return (\n\n    <div id=\"side-nav-left\">\n\n      <ul class=\"no-style\">\n        {props.data && removeDuplicates(props.data, \"date\").map((listItem) =>\n          <li>\n            <Link\n              to={`#${listItem.id}`}\n              className={`${window.location.href.indexOf(`#${listItem.id}`) != -1 ? \"active\" : \"inactive\"}`}\n              smooth\n            >\n              {listItem.date}\n            </Link>\n          </li>\n        )}\n      </ul>\n    </div>\n\n  );\n\n}\n\nexport default AnchorNav;\n","import React from 'react';\nimport Tile from '../components/tile';\nimport client from '../contentfulProvider';\nimport AnchorNav from '../components/anchorNav';\nimport { HashLink as Link } from \"react-router-hash-link\";\n\nclass Trips extends React.Component {\n  state = {\n    data: [],\n    yearSelected: \"\"\n  };\n\n  componentDidMount() {\n    client.getEntries({content_type: 'Trip', order: '-fields.tripDate'}).then(response =>\n      this.setState({data: response.items})\n    )\n  }\n\n  getAnchorData() {\n    console.log(\"Anchor Data:\");\n    console.log(this.state.data);\n    return this.state.data.length && this.state.data.map((trip) =>\n      ({\n        id: trip.sys.id,\n        date: trip.fields.tripDate.split(\"-\")[0]\n      })\n    )\n  }\n\n\n  render () {\n\n\n    return (\n      <>\n        {this.state.data.length && <AnchorNav data={this.getAnchorData()}/>}\n\n        <div className=\"content-container\">\n          <div className=\"page-header\">\n            <h1>Trips</h1>\n          </div>\n          <div className='tiles'>\n            {this.state.data.length ? this.state.data.map(\n              (trip) => console.info('trip', trip) ||\n                <Tile\n                  key={trip.sys.id}\n                  id={trip.sys.id}\n                  to={`/trips/${trip.sys.id}`}\n                  text={trip.fields.tripName}\n                  imgSrc={(trip.fields.tilePicTrip && trip.fields.tilePicTrip.fields != null) ? trip.fields.tilePicTrip.fields.file.url : undefined}\n                  filteredOut={false}\n                />\n\n            ):\n              <>Loading...</>}\n          </div>\n        </div>\n\n        <div id=\"footer\"><Link smooth to=\"#\">Back to top</Link></div>\n      </>\n    );\n  }\n\n}\nexport default Trips;\n","import React, { useEffect, useState } from 'react';\nimport Carousel, { Dots } from '@brainhubeu/react-carousel';\nimport '@brainhubeu/react-carousel/lib/style.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { faCoffee, faChevronLeft, faChevronRight } from '@fortawesome/free-solid-svg-icons';\n\nlibrary.add(faCoffee, faChevronLeft, faChevronRight);\n// ...\n\nclass CustomCarousel extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: 0,\n    };\n  }\n\n  onChange = value => this.setState({ value });\n\n  render() {\n    return (\n      <div>\n        <Carousel\n          value={this.state.value}\n          onChange={this.onChange}\n          centered\n          arrowLeft={<FontAwesomeIcon className=\"carousel-arrow\" icon=\"chevron-left\" size=\"2x\"/>}\n          arrowRight={<FontAwesomeIcon className=\"carousel-arrow\" icon=\"chevron-right\" size=\"2x\"/>}\n          addArrowClickHandler\n\n        >\n          {this.props.items && this.props.items.map(\n            (image, key) => (<img src={`${image.fields.file.url}?fm=jpg&fl=progressive&h=400&w=600`} key={key} />)\n          )}\n        </Carousel>\n      </div>\n    );\n  }\n\n}\n\nexport default CustomCarousel;\n","function getDate (input, monthLength) { // input will be 2020-02-28 format\n  const inputArray = input.split(\"-\");\n  const date = new Date(inputArray[0], inputArray[1], inputArray[2]);\n\n  const day = date.getDate().toString();\n  const month = date.toLocaleString('default', { month: monthLength });\n  const year = date.getFullYear().toString();\n\n  const dateOut = day + \" \" + month + \" \" + year\n\n  return dateOut;\n}\n\nexport default getDate;\n","import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport client from '../contentfulProvider';\nimport ReactMarkdown from 'react-markdown';\nimport CustomCarousel from '../components/carousel';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlayCircle, faMapMarkerAlt, faCalendarAlt } from '@fortawesome/free-solid-svg-icons';\nimport getDate from '../dateFormatter';\n\n\nfunction Trip(props) {\n  // this is just a way of getting state inside functions which... don't have state (does not work on classes)\n  const [isLoading, setIsLoading] = useState(true);\n  const [tripDetails, setTripDetails] = useState({});\n\n  console.log(\"Trip Props: \");\n  console.log(props.location);\n\n  // Think of this as kind of a component did mount...\n  useEffect(() => {\n    const handleDataFetch = async () => {\n      const pageId = props.location.pathname.split('/')[2];\n      // await pattern is the same as using then(), just makes it more streamline\n      const response = await client.getEntry(pageId); // wait for this to resolve, returns response.\n      setTripDetails(response);\n      setIsLoading(false)\n    }\n\n    if (props.location.data) {\n      setTripDetails(props.location.data);\n      setIsLoading(false);\n    } else {\n      handleDataFetch();\n    }\n\n  }, [props.location]);\n\n  // Haven't got the data yet, so hang tight\n  if (isLoading) {\n    return <>Loading...</>\n  }\n\n\n  return (\n    <>\n\n      <div className=\"trip-hero\">\n\n        <div className=\"trip-hero-text\">\n          <div className=\"trip-hero-text__title\">\n            <h1 className=\"trip-title\">{tripDetails.fields.tripName}</h1>\n          </div>\n          <p className=\"hero-text\"><FontAwesomeIcon icon={faCalendarAlt} className=\"icon\"/>{getDate(tripDetails.fields.tripDate, \"long\")}</p>\n          <hr className=\"style-1\"/>\n          <p className=\"hero-text\"><FontAwesomeIcon icon={faMapMarkerAlt} className=\"icon\"/>{tripDetails.fields.tripLocations}</p>\n          <ul className=\"no-style-light-blue\">\n            {\n              tripDetails.fields.countriesVisitedInTrip.map((country, key) => (\n                <li className=\"hero-inline-list_item\" key={key}>\n                  <Link to={`/countries/${country.sys.id}`} className=\"country-link\">\n                    {country.fields.countryName}\n                  </Link>\n                </li>\n              ))\n            }\n          </ul>\n          <a><p className=\"hero-text video-button\">Watch video <FontAwesomeIcon icon={faPlayCircle} className=\"icon-after\"/></p></a>\n        </div>\n\n        {tripDetails.fields.tilePicTrip && <div className=\"hero-image\" style={{backgroundImage: `url(${tripDetails.fields.tilePicTrip.fields.file.url}?fm=jpg&fl=progressive)`}}>\n        </div>}\n\n      </div>\n\n      <div className=\"content-container\">\n        <div className=\"content-section\">\n          <div className=\"content-grid\">\n            <div className=\"col-left\">\n              <ReactMarkdown>{tripDetails.fields.highlights}</ReactMarkdown>\n              <ReactMarkdown>{tripDetails.fields.tripItinirary}</ReactMarkdown>\n            </div>\n            <div className=\"col-right\">\n              <CustomCarousel items={tripDetails.fields.tripPhotos} />\n            </div>\n          </div>\n        </div>\n\n        <div className=\"content-section\">\n          <div className=\"blog\">\n            <ReactMarkdown>{(tripDetails.fields.tripDetails).replace(/.JPG/gi,\".JPG?fl=progressive\")}</ReactMarkdown>\n          </div>\n        </div>\n      </div>\n\n      <div id=\"footer\">\n        <a href=\"/trips\">Back to Trips</a>\n      </div>\n    </>\n  );\n\n}\n\nexport default Trip;\n","import React, { useEffect, useState } from 'react';\nimport client from '../contentfulProvider';\nimport ReactMarkdown from 'react-markdown';\nimport Tile from '../components/tile';\n\nfunction Country(props) {\n\n  // this is just a way of getting state inside functions which... don't have state (does not work on classes)\n  const [isLoading, setIsLoading] = useState(true);\n  const [countryDetails, setCountryDetails] = useState({});\n\n  console.log(\"Country Props: \");\n  console.log(props.location);\n\n  // Think of this as kind of a component did mount...\n  useEffect(() => {\n    const handleDataFetch = async () => {\n      const pageId = props.location.pathname.split('/')[2];\n      // await pattern is the same as using then(), just makes it more streamline\n      const response = await client.getEntry(pageId); // wait for this to resolve, returns response.\n      setCountryDetails(response);\n      setIsLoading(false)\n    }\n\n    if (props.location.data) {\n      setCountryDetails(props.location.data);\n      setIsLoading(false);\n    } else {\n      handleDataFetch();\n    }\n\n  }, [props.location]);\n\n  // Haven't got the data yet, so hang tight\n  if (isLoading) {\n    return <>Loading...</>\n  }\n\n  // Get all trips in this country\n  const tripsInCountry = countryDetails.fields.tripsInThisCountry;\n\n  // Generate trip tiles and store in variable\n  const tripTiles = tripsInCountry.length ? tripsInCountry.map(\n    (trip) => console.info('trip', trip) ||\n      <Tile key={trip.sys.id}\n        to={`/trips/${trip.sys.id}`}\n        text={trip.fields.tripName}\n        imgSrc={(trip.fields.tilePicTrip && trip.fields.tilePicTrip.fields != null) ? trip.fields.tilePicTrip.fields.file.url : undefined}\n        data={trip}\n      />\n  ): <>Loading...</>\n\n  return (\n    <>\n      {countryDetails.fields.tilePicCountry && <div className=\"country-hero\" style={{backgroundImage: `url(${countryDetails.fields.tilePicCountry.fields.file.url}?fm=jpg&fl=progressive)`}}>\n        <div className=\"country-hero-text\">\n          {countryDetails.fields.countryName}\n        </div>\n      </div>}\n\n      <div className=\"content-container\">\n        <div className=\"content-section\">\n          <ReactMarkdown>{countryDetails.fields.countryHighlights}</ReactMarkdown>\n          <ReactMarkdown>{countryDetails.fields.countryTips}</ReactMarkdown>\n        </div>\n        <div className=\"content-section\">\n          <ReactMarkdown>{countryDetails.fields.countryLocations}</ReactMarkdown>\n        </div>\n\n        <div className=\"content-section\">\n          <h2> Trips in {countryDetails.fields.countryName} </h2>\n          <div className=\"tiles\">\n            {tripTiles}\n          </div>\n        </div>\n      </div>\n      <div id=\"footer\">\n        <a href=\"/countries\">Back to Countries</a>\n      </div>\n    </>\n  );\n\n}\n\nexport default Country;\n","import React from 'react';\n\nfunction Map() {\n  return (\n    <>\n      <div className=\"map\">\n        <iframe\n          src=\"https://www.google.com.au/maps/d/embed?mid=14Xxl8D0RNCmZcCREEImvSxx7QpE\">\n        </iframe>\n      </div>\n    </>\n  );\n}\n\nexport default Map;\n","import React from 'react';\nimport './App.css';\nimport { HashRouter as Router, Route, Switch, Link, NavLink } from \"react-router-dom\";\nimport Index from './pages/index';\nimport Countries from './pages/countries.js';\nimport Trips from './pages/trips';\nimport Trip from './pages/trip';\nimport Country from './pages/country';\nimport Map from './pages/map';\n\n// Font awesome icon setup\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { faGlobeAmericas, faCoffee, faChevronLeft, faChevronRight } from '@fortawesome/free-solid-svg-icons';\nlibrary.add(faGlobeAmericas, faCoffee, faChevronLeft, faChevronRight);   // add icons to library\n\n\nfunction App() {\n\n  return (\n    <>\n      <Router basename='/'>\n        <div id=\"top\" className=\"nav\">\n\n          <Link to=\"/\">\n            <div id=\"logo\">\n              <FontAwesomeIcon icon=\"globe-americas\" className=\"icon\"/>Where's Shell\n            </div>\n          </Link>\n\n          <div className=\"menu\">\n\n            <ul>\n              <li>\n                <NavLink to=\"/\" exact={true} activeClassName=\"nav-active\">Home</NavLink>\n              </li>\n              <li>\n                <NavLink to=\"/trips\" activeClassName=\"nav-active\">Trips</NavLink>\n              </li>\n              <li>\n                <NavLink to=\"/countries\" activeClassName=\"nav-active\">Countries</NavLink>\n              </li>\n              <li>\n                <NavLink to=\"/map\" activeClassName=\"nav-active\">Map</NavLink>\n              </li>\n            </ul>\n\n          </div>\n\n        </div>\n\n        <div className=\"container-main\">\n          <Switch>\n            <Route path=\"/\" exact component={Index} />\n            <Route path=\"/trips/\" exact component={Trips} />\n            <Route path=\"/trips/:id\" component={Trip} />\n            <Route path=\"/countries/\" exact component={Countries} />\n            <Route path=\"/countries/:id\" component={Country} />\n            <Route path=\"/map\" component={Map} />\n          </Switch>\n        </div>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}